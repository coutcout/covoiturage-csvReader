// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	io "io"

	mock "github.com/stretchr/testify/mock"
)

// JourneyUsecase is an autogenerated mock type for the JourneyUsecase type
type JourneyUsecase struct {
	mock.Mock
}

// ImportFromCSVFile provides a mock function with given fields: reader
func (_m *JourneyUsecase) ImportFromCSVFile(reader io.Reader) (int64, error) {
	ret := _m.Called(reader)

	var r0 int64
	var r1 error
	if rf, ok := ret.Get(0).(func(io.Reader) (int64, error)); ok {
		return rf(reader)
	}
	if rf, ok := ret.Get(0).(func(io.Reader) int64); ok {
		r0 = rf(reader)
	} else {
		r0 = ret.Get(0).(int64)
	}

	if rf, ok := ret.Get(1).(func(io.Reader) error); ok {
		r1 = rf(reader)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewJourneyUsecase interface {
	mock.TestingT
	Cleanup(func())
}

// NewJourneyUsecase creates a new instance of JourneyUsecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewJourneyUsecase(t mockConstructorTestingTNewJourneyUsecase) *JourneyUsecase {
	mock := &JourneyUsecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

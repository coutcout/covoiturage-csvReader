// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/coutcout/covoiturage-csvreader/domain"
	gin "github.com/gin-gonic/gin"

	mock "github.com/stretchr/testify/mock"
)

// JourneyRepositoryInterface is an autogenerated mock type for the JourneyRepositoryInterface type
type JourneyRepositoryInterface struct {
	mock.Mock
}

// Add provides a mock function with given fields: c, journeys
func (_m *JourneyRepositoryInterface) Add(c *gin.Context, journeys []domain.Journey) (int, error) {
	ret := _m.Called(c, journeys)

	var r0 int
	var r1 error
	if rf, ok := ret.Get(0).(func(*gin.Context, []domain.Journey) (int, error)); ok {
		return rf(c, journeys)
	}
	if rf, ok := ret.Get(0).(func(*gin.Context, []domain.Journey) int); ok {
		r0 = rf(c, journeys)
	} else {
		r0 = ret.Get(0).(int)
	}

	if rf, ok := ret.Get(1).(func(*gin.Context, []domain.Journey) error); ok {
		r1 = rf(c, journeys)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewJourneyRepositoryInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewJourneyRepositoryInterface creates a new instance of JourneyRepositoryInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewJourneyRepositoryInterface(t mockConstructorTestingTNewJourneyRepositoryInterface) *JourneyRepositoryInterface {
	mock := &JourneyRepositoryInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
